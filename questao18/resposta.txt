#include <stdio.h>
#include <stdlib.h>

void mult_matriz(int *A, int *B, int *C, int linhasA, int colunasA, int colunasB) {
    for (int i = 0; i < linhasA; i++) {
        for (int j = 0; j < colunasB; j++) {
            int soma = 0;
            for (int k = 0; k < colunasA; k++) {
                soma += A[i * colunasA + k] * B[k * colunasB + j];
            }
            C[i * colunasB + j] = soma;
        }
    }
}

int main() {
    int linhasA, colunasA, colunasB;

    printf("Digite o número de linhas da matriz A: ");
    scanf("%d", &linhasA);
    printf("Digite o número de colunas da matriz A: ");
    scanf("%d", &colunasA);
    printf("Digite o número de colunas da matriz B: ");
    scanf("%d", &colunasB);

    int *A = malloc(linhasA * colunasA * sizeof(int));
    int *B = malloc(colunasA * colunasB * sizeof(int));
    int *C = malloc(linhasA * colunasB * sizeof(int));

    printf("Digite os elementos da matriz A:\n");
    for (int i = 0; i < linhasA; i++) {
        for (int j = 0; j < colunasA; j++) {
            scanf("%d", &A[i * colunasA + j]);
        }
    }

    printf("Digite os elementos da matriz B:\n");
    for (int i = 0; i < colunasA; i++) {
        for (int j = 0; j < colunasB; j++) {
            scanf("%d", &B[i * colunasB + j]);
        }
    }

    mult_matriz(A, B, C, linhasA, colunasA, colunasB);

    printf("Matriz A:\n");
    for (int i = 0; i < linhasA; i++) {
        for (int j = 0; j < colunasA; j++) {
            printf("%d ", A[i * colunasA + j]);
        }
        printf("\n");
    }
    printf("\n");

    printf("Matriz B:\n");
    for (int i = 0; i < colunasA; i++) {
        for (int j = 0; j < colunasB; j++) {
            printf("%d ", B[i * colunasB + j]);
        }
        printf("\n");
    }
    printf("\n");

    printf("Matriz C = A * B:\n");
    for (int i = 0; i < linhasA; i++) {
        for (int j = 0; j < colunasB; j++) {
            printf("%d ", C[i * colunasB + j]);
        }
        printf("\n");
    }

    free(A);
    free(B);
    free(C);

    return 0;
}
