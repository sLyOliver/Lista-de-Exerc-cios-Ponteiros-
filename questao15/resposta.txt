#include <stdio.h>
#include <stdlib.h>

typedef int (*compare_func)(const void*, const void*);

// Função de comparação para usar com a função my_sort
int cmpfunc(const void *a, const void *b) {
   return (*(int*)a - *(int*)b);
}

void my_sort(void *base, size_t num_elems, size_t elem_size, compare_func compare) {
    char *ptr = base;
    for (size_t i = 0; i < num_elems - 1; i++) {
        for (size_t j = 0; j < num_elems - i - 1; j++) {
            void *elem1 = ptr + j * elem_size;
            void *elem2 = ptr + (j + 1) * elem_size;
            if (compare(elem1, elem2) > 0) {
                // Troca os elementos
                char tmp[elem_size];
                memcpy(tmp, elem1, elem_size);
                memcpy(elem1, elem2, elem_size);
                memcpy(elem2, tmp, elem_size);
            }
        }
    }
}

int main() {
    int values[] = { 5, 2, 8, 3, 1, 6 };
    size_t num_elems = sizeof(values) / sizeof(int);

    // Chama a função my_sort() para ordenar o vetor
    my_sort(values, num_elems, sizeof(int), cmpfunc);

    printf("Valores em ordem crescente:\n");
    for (size_t i = 0; i < num_elems; i++) {
        printf("%d ", values[i]);
    }
    printf("\n");

    return 0;
}
